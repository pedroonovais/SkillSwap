// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using SkillSwapCore;

#nullable disable

namespace SkillSwapCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkillSwapCore.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<int>("CreditValue")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("SkillSwapCore.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<Guid>("FromUserId")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("RAW(16)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid>("ToUserId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("FromUserId");

                    b.HasIndex("SkillId");

                    b.HasIndex("ToUserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SkillSwapCore.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<int>("Credits")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SkillSwapCore.Entities.Skill", b =>
                {
                    b.HasOne("SkillSwapCore.Entities.User", "Owner")
                        .WithMany("SkillsOffered")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SkillSwapCore.Entities.Transaction", b =>
                {
                    b.HasOne("SkillSwapCore.Entities.User", "FromUser")
                        .WithMany("TransactionsSent")
                        .HasForeignKey("FromUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SkillSwapCore.Entities.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillSwapCore.Entities.User", "ToUser")
                        .WithMany("TransactionsReceived")
                        .HasForeignKey("ToUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromUser");

                    b.Navigation("Skill");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("SkillSwapCore.Entities.User", b =>
                {
                    b.Navigation("SkillsOffered");

                    b.Navigation("TransactionsReceived");

                    b.Navigation("TransactionsSent");
                });
#pragma warning restore 612, 618
        }
    }
}
